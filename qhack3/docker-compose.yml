version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: quantumfin-db
    environment:
      POSTGRES_DB: quantumfin
      POSTGRES_USER: quantum_user
      POSTGRES_PASSWORD: quantum_password_2024
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - quantum-network
    restart: unless-stopped

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: quantumfin-redis
    ports:
      - "6379:6379"
    networks:
      - quantum-network
    restart: unless-stopped

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: quantumfin-backend
    environment:
      - DATABASE_URL=postgresql://quantum_user:quantum_password_2024@postgres:5432/quantumfin
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=quantum_secret_key_2024_hackathon
      - GMAIL_USERNAME=${GMAIL_USERNAME}
      - GMAIL_PASSWORD=${GMAIL_PASSWORD}
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
      - TWILIO_PHONE_NUMBER=${TWILIO_PHONE_NUMBER}
      - MISTRAL_API_KEY=${MISTRAL_API_KEY}
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    networks:
      - quantum-network
    volumes:
      - ./backend:/app
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: quantumfin-frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_QUANTUM_MODE=enabled
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - quantum-network
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: quantumfin-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - quantum-network
    restart: unless-stopped



volumes:
  postgres_data:
    driver: local

networks:
  quantum-network:
    driver: bridge